{"version":3,"sources":["Images/flower.svg","Images/avatar.jpg","Documents/AndieMontoya-May2020-Resume.pdf","Components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","wrapIcon","verticalAlign","display","marginTop","color","sideBar","marginLeft","marginRight","paddingTop","paddingLeft","paddingRight","paddingBottom","minWidth","maxWidth","avatar","margin","width","height","marginBottom","sideIcon","mainIcon","bio","padding","backgroundColor","borderRadius","fontStyle","creds","Sidebar","classes","Paper","elevation","className","Avatar","src","Typography","variant","MailOutline","Phone","IconButton","href","LinkedIn","GitHub","App","flower","alt","pdf","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,yD,oRCOrCC,G,MAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,SAAU,CACRC,cAAe,SACfC,QAAS,cACTC,UAAW,MACXC,MAAO,WAERC,QAAS,CACNF,UAAW,OACXG,WAAY,OACZC,YAAa,OACbC,WAAY,OACZC,YAAa,OACbC,aAAc,OACdC,cAAe,OACfC,SAAU,QACVC,SAAU,OAEbC,OAAQ,CACJC,OAAQ,OACRC,MAAO,QACPC,OAAQ,QACRC,aAAc,QAElBC,SAAU,CACNZ,YAAa,MACbH,MAAO,WAEXgB,SAAU,CACNjB,UAAW,MACXC,MAAO,WAEXiB,IAAK,CACDlB,UAAW,QACXG,WAAY,MACZC,YAAa,MACbe,QAAS,OACTC,gBAAiB,UACjBC,aAAc,OACdC,UAAW,UAEfC,MAAO,CACHvB,UAAW,cAuCLwB,EAnCC,WACZ,IAAMC,EAAU/B,IAChB,OACQ,kBAACgC,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAWH,EAAQvB,SACpC,kBAAC2B,EAAA,EAAD,CAAQC,IAAKnB,IAAQiB,UAAWH,EAAQd,SACxC,kBAACoB,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,YAAYJ,UAAWH,EAAQ5B,UAC/C,kBAACoC,EAAA,EAAD,CAAaL,UAAWH,EAAQT,WADpC,6BAHJ,KAKmB,6BACf,kBAACe,EAAA,EAAD,CAAYC,QAAQ,YAAYJ,UAAWH,EAAQ5B,UAC/C,kBAACqC,EAAA,EAAD,CAAON,UAAWH,EAAQT,WAD9B,mBAGA,6BACA,kBAACmB,EAAA,EAAD,CAAYC,KAAK,qDAAqDR,UAAWH,EAAQR,UACrF,kBAACoB,EAAA,EAAD,OAEJ,kBAACF,EAAA,EAAD,CAAYC,KAAK,mCAAmCR,UAAWH,EAAQR,UACnE,kBAACqB,EAAA,EAAD,OAEJ,yBAAKV,UAAWH,EAAQP,KACvB,kBAACa,EAAA,EAAD,CAAYC,QAAQ,SAApB,sjBAQD,yBAAKJ,UAAWH,EAAQF,OACpB,0CAAe,uBAAGa,KAAK,gDAAR,oBAAf,QAA+F,uBAAGA,KAAK,4BAAR,eAA/F,Q,iBC5DLG,MAhBf,WACE,OACE,yBAAKX,UAAU,OACb,kBAAC,EAAD,MACA,4BAAQA,UAAU,cAChB,yBAAKE,IAAKU,IAAQZ,UAAU,WAAWa,IAAI,SAC3C,wDAGA,oDAAyB,uBAAGL,KAAQM,IAAKC,OAAS,UAAzB,WAAzB,6DCHYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dfa44b25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flower.6c4ea0c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.7a65c6d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AndieMontoya-May2020-Resume.16d49f62.pdf\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Typography, Avatar, IconButton } from '@material-ui/core';\r\nimport { MailOutline, Phone, LinkedIn, GitHub } from '@material-ui/icons';\r\nimport avatar from '../Images/avatar.jpg';\r\nimport { aquamarine } from 'color-name';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    wrapIcon: {\r\n      verticalAlign: 'middle',\r\n      display: 'inline-flex', \r\n      marginTop: '8px', \r\n      color: '#585959'\r\n     }, \r\n     sideBar: { \r\n        marginTop: '16px',\r\n        marginLeft: '16px',\r\n        marginRight: '12px',\r\n        paddingTop: '40px', \r\n        paddingLeft: '16px', \r\n        paddingRight: '16px',\r\n        paddingBottom: '36px', \r\n        minWidth: '380px', \r\n        maxWidth: '24%'\r\n     }, \r\n     avatar: { \r\n         margin: 'auto', \r\n         width: '150px', \r\n         height: '150px',\r\n         marginBottom: '40px'\r\n     }, \r\n     sideIcon: { \r\n         marginRight: '8px', \r\n         color: '#585959'\r\n     }, \r\n     mainIcon: { \r\n         marginTop: '8px',\r\n         color: '#63c7e6',\r\n     },\r\n     bio: { \r\n         marginTop: '100px',\r\n         marginLeft: '8px', \r\n         marginRight: '8px',\r\n         padding: '24px', \r\n         backgroundColor: '#f2f3f5',\r\n         borderRadius: '10px',\r\n         fontStyle: 'italic'\r\n     }, \r\n     creds: { \r\n         marginTop: '130px',\r\n     }\r\n  }));\r\n\r\nconst Sidebar = () => {  \r\n    const classes = useStyles();\r\n    return (\r\n            <Paper elevation={6} className={classes.sideBar}>  \r\n                <Avatar src={avatar} className={classes.avatar} />\r\n                <Typography variant=\"h3\">Andie Montoya</Typography> \r\n                <Typography variant=\"subtitle1\" className={classes.wrapIcon}>\r\n                    <MailOutline className={classes.sideIcon} /> andiemontoyeah@gmail.com\r\n                </Typography>  <br/>\r\n                <Typography variant=\"subtitle1\" className={classes.wrapIcon}>  \r\n                    <Phone className={classes.sideIcon} /> + 778-772-0785\r\n                </Typography>  \r\n                <br/>\r\n                <IconButton href=\"http://www.linkedin.com/in/andie-montoya-963a99170\" className={classes.mainIcon}> \r\n                    <LinkedIn />\r\n                </IconButton>\r\n                <IconButton href=\"http://github.com/andiemontoyeah\" className={classes.mainIcon}> \r\n                    <GitHub />\r\n                </IconButton>\r\n                <div className={classes.bio}>  \r\n                 <Typography variant=\"body1\"> \r\n                    Hi there! I'm Andie. :) I'm a new graduate from the University of British Columbia's computer engineering program. \r\n                    I have 16 months of co-op/internship experience: 8 months of full-stack web development and 8 months of native Android development. \r\n                    I am mainly looking for full-time opportunities in either of those areas but am open to anything interesting. Current technical interests \r\n                    include infrastructure-as-code tools, cloud platforms, and functional programming patterns.\r\n                    Current random interests include cooking, baking, and binging everything on Netflix!\r\n                 </Typography> \r\n                 </div>\r\n                <div className={classes.creds}> \r\n                    <p> Built with <a href=\"https://github.com/facebook/create-react-app\">create-react-app</a> and <a href=\"https://material-ui.com/\">material-ui</a>.</p>\r\n                </div>\r\n            </Paper> \r\n    ); \r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport flower from './Images/flower.svg'\r\nimport './App.css';\r\nimport Sidebar from './Components/Sidebar';\r\nimport pdf from './Documents/AndieMontoya-May2020-Resume.pdf';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar/>\r\n      <header className=\"App-header\">\r\n        <img src={flower} className=\"App-logo\" alt=\"logo\" /> \r\n        <p>\r\n          More content coming soon!\r\n        </p> \r\n        <p> For now, checkout my <a href = {pdf} target = \"_blank\">resume </a> to \r\n        learn more about my projects and past experiences.</p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}